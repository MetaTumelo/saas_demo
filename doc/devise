https://www.sitepoint.com/devise-authentication-in-depth/

Some setup you must do manually if you haven't yet:

  1. Ensure you have defined default url options in your environments files. Here
     is an example of default_url_options appropriate for a development environment
     in config/environments/development.rb:

       config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }

     In production, :host should be set to the actual host of your application.

  2. Ensure you have defined root_url to *something* in your config/routes.rb.
     For example:

       root to: "home#index"

  3. Ensure you have flash messages in app/views/layouts/application.html.erb.
     For example:

       <p class="notice"><%= notice %></p>
       <p class="alert"><%= alert %></p>

  4. If you are deploying on Heroku with Rails 3.2 only, you may want to set:

       config.assets.initialize_on_precompile = false

     On config/application.rb forcing your application to not access the DB
     or load models when precompiling your assets.

  5. You can copy Devise views (for customization) to your app by running:

       rails g devise:views

===============================================================================

#def configure_permitted_parameters
  #  devise_parameter_sanitizer.for(:accept_invitation).concat([:username])
  #end
  
  #def configure_permitted_parameters
    #devise_parameter_sanitizer.permit(:accept_invitation, keys: [:username])
    
    # :inviteと:accept_invitationに:usernameを許可する
      #devise_parameter_sanitizer.for(:invite) { |u| u.permit(:email, :username) }
      #devise_parameter_sanitizer.for(:accept_invitation) { |u| u.permit(:password, :password_confirmation, :invitation_token, :username) }

      # こういう書き方もできるっぽい
      #devise_parameter_sanitizer.for(:invite) << :username
      #devise_parameter_sanitizer.for(:accept_invitation) << :username
  #end
  
  #def authenticate_inviter!
  #  authenticate_user!(:force => true)
  #end
  